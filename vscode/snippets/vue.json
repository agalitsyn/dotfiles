{
	"Vue 3 TypeScript Composition API Component": {
		"prefix": "vcomp",
		"description": "Vue 3 component using composition API",
		"body": [
			"<template>",
			"  <button @click=\"increment\">Count is: {{ count }}</button>",
			"</template>",
			"",
			"<script setup lang=\"ts\">",
			"  import { ref, onMounted } from \"vue\";",
			"",
			"  const count = ref(0);",
			"",
			"  function increment() {",
			"    count.value++;",
			"  }",
			"",
			"  onMounted(() => {",
			"    console.log(`The initial count is ${count.value}.`);",
			"  });",
			"</script>",
			"",
		],
	},
	"Vue 2 TypeScript Class Component": {
		"prefix": "vcomp2",
		"description": "Vue 2 class-based component with Vuetify",
		"body": [
			"<template>",
			"  <v-card flat>",
			"    <v-card-title>",
			"      <span class=\"text-h5\">{{ title }}</span>",
			"    </v-card-title>",
			"",
			"    <validation-observer ref=\"observer\" v-slot=\"{ invalid }\">",
			"      <form @submit.prevent=\"handleSubmit\">",
			"        <v-card-text>",
			"          <v-container>",
			"            <v-row>",
			"              <v-col cols=\"12\">",
			"                <v-select :items=\"['a', 'b', 'c']\" label=\"Выбор\"></v-select>",
			"              </v-col>",
			"            </v-row>",
			"          </v-container>",
			"        </v-card-text>",
			"",
			"        <v-card-actions>",
			"          <v-spacer></v-spacer>",
			"          <v-btn @click=\"handleCancel\">Отмена</v-btn>",
			"          <v-btn type=\"submit\" :disabled=\"invalid\">Сохранить</v-btn>",
			"        </v-card-actions>",
			"      </form>",
			"    </validation-observer>",
			"  </v-card>",
			"</template>",
			"",
			"<script lang=\"ts\">",
			"  import { Vue, Component, Prop } from \"vue-property-decorator\";",
			"",
			"  import { ValidationProvider, ValidationObserver, extend } from \"vee-validate\";",
			"  import { required } from \"vee-validate/dist/rules\";",
			"",
			"  // register validation rules",
			"  extend(\"required\", { ...required, message: \"{_field_} не может быть пустым\" });",
			"",
			"  @Component({",
			"    components: {",
			"      ValidationObserver,",
			"      ValidationProvider,",
			"    },",
			"  })",
			"  export default class ${1:ClassName} extends Vue {",
			"    @Prop({ default: \"Заголовок\" })",
			"    title!: string;",
			"",
			"    handleCancel() {",
			"      this.$emit(\"on-cancel\", true);",
			"    }",
			"",
			"    handleSubmit() {",
			"      this.$emit(\"on-submit\", true);",
			"    }",
			"  }",
			"</script>",
		],
	}
}
