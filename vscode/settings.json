{
  // Updates
  "update.mode": "start",
  "extensions.autoUpdate": false,
  "telemetry.telemetryLevel": "off",
  "extensions.ignoreRecommendations": true,
  "redhat.telemetry.enabled": false,

  "security.workspace.trust.enabled": false,

  // Term
  "terminal.external.osxExec": "WezTerm.app",
  "terminal.external.linuxExec": "x-terminal-emulator",
  "terminal.integrated.fontFamily": "IosevkaTerm Nerd Font Mono",
  "terminal.integrated.fontWeight": "normal",
  "terminal.integrated.fontSize": 16.5,
  "terminal.integrated.scrollback": 10000,
  "terminal.integrated.persistentSessionScrollback": 1000,
  "terminal.integrated.copyOnSelection": false,
  "terminal.integrated.hideOnStartup": "always",
  "terminal.integrated.cursorStyle": "block",
  "terminal.integrated.cursorStyleInactive": "outline",
  "terminal.integrated.tabStopWidth": 4,
  "terminal.integrated.enableMultiLinePasteWarning": "never",

  // Files
  "files.associations": {
    "Vagrantfile": "ruby",
    "**/requirements{/**,*}.{txt,in}": "pip-requirements",
  },
  "files.exclude": {
    "**/__pycache__": true
  },
  "files.insertFinalNewline": true,
  "files.trimTrailingWhitespace": true,
  "files.autoSave": "onFocusChange",
  "files.defaultLanguage": "plaintext",

  // Explorer
  "explorer.confirmDragAndDrop": false,
  "explorer.confirmDelete": false,
  "explorer.autoReveal": true,
  "explorer.enableUndo": true,
  "explorer.incrementalNaming": "smart",

  // Search
  "search.quickOpen.history.filterSortOrder": "recency",
  "search.exclude": {
    "**/.git": true,
    "**/node_modules": true,
    "**/.nuxt": true,
    "**/.next": true,
    "**/.venv": true,
    "**/vendor": true
  },

  // Editors per split
  "workbench.editor.limit.enabled": true,
  "workbench.editor.limit.perEditorGroup": true,
  "workbench.editor.limit.value": 15,
  "workbench.editor.showTabs": "multiple",
  "workbench.editor.enablePreview": false,


  // Editor look and feel
  "window.zoomLevel": 0.5,
  "window.nativeTabs": false,
  "window.title": "${activeEditorFull}${separator}${rootName}",
  "window.titleBarStyle": "custom",
  "window.customTitleBarVisibility": "windowed",
  "window.commandCenter": false,
  "window.confirmBeforeClose": "keyboardOnly",
  "window.density.editorTabHeight": "compact",
  "window.autoDetectColorScheme": true,

  "workbench.startupEditor": "none",
  "workbench.list.openMode": "doubleClick",
  "workbench.tree.expandMode": "doubleClick",
  "workbench.settings.editor": "json",
  "workbench.productIconTheme": "fluent-icons",
  "workbench.colorTheme": "Everforest Dark",
  "workbench.preferredDarkColorTheme": "Everforest Dark",
  "workbench.iconTheme": "bearded-icons",
  "workbench.activityBar.location": "top",
  "workbench.tree.enableStickyScroll": false,
  "workbench.layoutControl.enabled": false,
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editor.enablePreviewFromQuickOpen": true,
  "problems.decorations.enabled": false,

  "editor.fontSize": 16,
  "editor.fontWeight": "400",
  "editor.fontFamily": "'Iosevka', 'Martian Mono Nr Lt', 'JetBrains Mono', 'Cascadia Code', 'Fira Code', 'IBM Plex Mono', 'Input Mono', 'Source Code Pro'",
  "editor.fontLigatures": "'ss08', 'calt'",
  "editor.find.seedSearchStringFromSelection": "selection",
  "editor.scrollBeyondLastLine": true,
  "editor.lineHeight": 20,
  "editor.lineNumbers": "on",
  "editor.tabSize": 4,
  "editor.insertSpaces": true,
  // When opening a file, `editor.tabSize` and `editor.insertSpaces`
  // will be detected based on the file contents. Set to false to keep
  // the values you've explicitly set, above.
  // "editor.detectIndentation": false,
  "editor.useTabStops": true,
  "editor.formatOnSave": false,
  "editor.formatOnSaveMode": "file",
  "editor.formatOnPaste": false,
  "editor.codeActionsOnSave": {}, // setup per language
  "editor.renderWhitespace": "selection",
  "editor.find.cursorMoveOnType": true,
  "editor.rulers": [140],
  "editor.minimap.enabled": false,
  "editor.linkedEditing": false,
  "editor.unicodeHighlight.ambiguousCharacters": false,
  "editor.autoClosingOvertype": "never",
  "editor.autoClosingQuotes": "never",
  "editor.autoClosingBrackets": "never",
  "editor.matchBrackets": "near",
  "editor.bracketPairColorization.enabled": false,
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
  "editor.inlayHints.enabled": "on",
  "editor.lightbulb.enabled": "off",
  "editor.snippetSuggestions": "top",
  "editor.suggest.insertMode": "replace",
  "editor.accessibilitySupport": "off",
  "editor.quickSuggestionsDelay": 0,
  "editor.scrollbar.horizontal": "hidden",
  "editor.scrollbar.vertical": "auto",
  "editor.semanticHighlighting.enabled": true,
  "editor.stickyScroll.enabled": false,
  "zenMode.showTabs": "none",


  // Breadcrumbs
	"breadcrumbs.icons": false,
	"breadcrumbs.showKeys": false,
	"breadcrumbs.showFiles": false,
	"breadcrumbs.symbolPath": "off",
	"breadcrumbs.showArrays": false,
	"breadcrumbs.showEvents": false,
	"breadcrumbs.showFields": false,
	"breadcrumbs.showClasses": false,
	"breadcrumbs.showMethods": false,
	"breadcrumbs.showBooleans": false,
	"breadcrumbs.showFunctions": false,
	"breadcrumbs.showConstants": false,
	"breadcrumbs.showEnumMembers": false,
	"breadcrumbs.showConstructors": false,

  // Markdown
  "markdown.editor.pasteUrlAsFormattedLink.enabled": "smart",

  // Git
  "git.autofetch": true,
  "git.enableSmartCommit": true,
  "git.confirmSync": false,
  "git.mergeEditor": true,
  "git.openRepositoryInParentFolders": "never",

  // Diff
  "diffEditor.experimental.showMoves": true,
  "diffEditor.renderSideBySide": true,
  "diffEditor.hideUnchangedRegions.enabled": true,

  // Gitlens
  "gitlens.showWelcomeOnInstall": false,
  "gitlens.showWhatsNewAfterUpgrades": false,
  "gitlens.currentLine.enabled": true,
  "gitlens.statusBar.enabled": false,
  "gitlens.codeLens.enabled": true,
  "gitlens.codeLens.recentChange.enabled": false,
  "gitlens.codeLens.authors.enabled": false,
  "gitlens.hovers.avatars": false,
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.plusFeatures.enabled": false,

  // Go
  // https://github.com/golang/tools/blob/master/gopls/doc/vscode.md
  "go.gopath": "~",
  "go.useLanguageServer": true,
  "go.toolsManagement.autoUpdate": true,
  // "go.inlayHints.functionTypeParameters": true,
  // "go.inlayHints.parameterNames": true,
  "gopls": {
    "ui.semanticTokens": true,
    // "ui.completion.usePlaceholders": true,
    "formatting.gofumpt": true
  },
  "[go]": {
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": "explicit"
    }
    // Optional: Disable snippets, as they conflict with completion ranking.
    // "editor.snippetSuggestions": "bottom"
  },
  "[go][go.mod]": {
    "editor.codeActionsOnSave": {
      "source.organizeImports": "explicit"
    }
  },
  "go.addTags": {
    "tags": "json",
    "options": "json=omitempty",
    "promptForTags": true,
    "transform": "snakecase"
  },
  "go.vetOnSave": "package",
  "go.vetFlags": [],
  "go.lintOnSave": "package",
  "go.lintTool": "golangci-lint",
  "go.lintFlags": [],
  "go.coverOnSave": false,

  "emeraldwalk.runonsave": {
    "commands": [
      {
        "match": "\\.go$",
        "cmd": "golines ${file} --write-output --max-len=140"
      }
    ]
  },

  // Python
  "python.languageServer": "Pylance",
  "python.analysis.typeCheckingMode": "standard",
  "[python]": {
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.fixAll": "explicit",
      "source.organizeImports": "explicit"
    },
    "editor.defaultFormatter": "charliermarsh.ruff"
  },
  "python.terminal.activateEnvironment": false,

  // HTML and templating languages
  "html.autoClosingTags": true,

  "emmet.triggerExpansionOnTab": true,
  "emmet.showSuggestionsAsSnippets": true,
  "emmet.includeLanguages": {
    "jinja": "html",
    "jinja-html": "html",
    "django-html": "html",
  },

  "indentRainbow.includedLanguages": [
    "html",
    "vue",
    "tsx"
  ],

  "[html][jinja][jinja-html][django-html]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    // "editor.language.colorizedBracketPairs": [
    //   ["<", "</"],
    //   ["<", "/>"],
    // ],
    // "editor.guides.bracketPairs": "active",
    // "editor.matchBrackets": "near",
    // "editor.bracketPairColorization.enabled": true,
    // "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
  },

  "prettier.bracketSameLine": true,
  "prettier.printWidth": 140,

  // CSS
  "[css]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "tailwindCSS.includeLanguages": {
    "jinja": "html",
    "jinja-html": "html",
    "django-html": "html",
  },

  // JavaScript and TypeScript
  "auto-close-tag.enableAutoCloseTag": true,
  "auto-close-tag.activationOnLanguage": [
    "vue",
    "typescriptreact",
    "javascriptreact",
  ],

  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "vue"
  ],

  "[json]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascriptreact]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[vue]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  "todohighlight.keywords": [
    "DEBUG:",
    "TODO:",
    {
      "text": "NOTE:",
      "color": "#ffffff",
      "backgroundColor": "#A7C7E7",
      "overviewRulerColor": "grey"
    },
  ],
  "todohighlight.isCaseSensitive": true,

  // remove italics from all themes
  // "editor.tokenColorCustomizations": {
  //   "textMateRules": [
  //     {
  //       "scope": [
  //         "comment",
  //         "comment.block",
  //         "comment.block.documentation",
  //         "comment.line",
  //         "constant",
  //         "constant.character",
  //         "constant.character.escape",
  //         "constant.numeric",
  //         "constant.numeric.integer",
  //         "constant.numeric.float",
  //         "constant.numeric.hex",
  //         "constant.numeric.octal",
  //         "constant.other",
  //         "constant.regexp",
  //         "constant.rgb-value",
  //         "emphasis",
  //         "entity",
  //         "entity.name",
  //         "entity.name.class",
  //         "entity.name.function",
  //         "entity.name.method",
  //         "entity.name.section",
  //         "entity.name.selector",
  //         "entity.name.tag",
  //         "entity.name.type",
  //         "entity.other",
  //         "entity.other.attribute-name",
  //         "entity.other.inherited-class",
  //         "invalid",
  //         "invalid.deprecated",
  //         "invalid.illegal",
  //         "keyword",
  //         "keyword.control",
  //         "keyword.operator",
  //         "keyword.operator.new",
  //         "keyword.operator.assignment",
  //         "keyword.operator.arithmetic",
  //         "keyword.operator.logical",
  //         "keyword.other",
  //         "markup",
  //         "markup.bold",
  //         "markup.changed",
  //         "markup.deleted",
  //         "markup.heading",
  //         "markup.inline.raw",
  //         "markup.inserted",
  //         "markup.italic",
  //         "markup.list",
  //         "markup.list.numbered",
  //         "markup.list.unnumbered",
  //         "markup.other",
  //         "markup.quote",
  //         "markup.raw",
  //         "markup.underline",
  //         "markup.underline.link",
  //         "meta",
  //         "meta.block",
  //         "meta.cast",
  //         "meta.class",
  //         "meta.function",
  //         "meta.function-call",
  //         "meta.preprocessor",
  //         "meta.return-type",
  //         "meta.selector",
  //         "meta.tag",
  //         "meta.type.annotation",
  //         "meta.type",
  //         "punctuation.definition.string.begin",
  //         "punctuation.definition.string.end",
  //         "punctuation.separator",
  //         "punctuation.separator.continuation",
  //         "punctuation.terminator",
  //         "storage",
  //         "storage.modifier",
  //         "storage.type",
  //         "string",
  //         "string.interpolated",
  //         "string.other",
  //         "string.quoted",
  //         "string.quoted.double",
  //         "string.quoted.other",
  //         "string.quoted.single",
  //         "string.quoted.triple",
  //         "string.regexp",
  //         "string.unquoted",
  //         "strong",
  //         "support",
  //         "support.class",
  //         "support.constant",
  //         "support.function",
  //         "support.other",
  //         "support.type",
  //         "support.type.property-name",
  //         "support.variable",
  //         "variable",
  //         "variable.language",
  //         "variable.name",
  //         "variable.other",
  //         "variable.other.readwrite",
  //         "variable.parameter"
  //       ],
  //       "settings": {
  //         "fontStyle": ""
  //       }
  //     }
  //   ]
  // },

  // Vim
  // https://github.com/Microsoft/vscode/issues/23991
  "vim.disableExtension": true,
  "vim.leader": "<space>",
  "vim.autoSwitchInputMethod.enable": true,
  "vim.autoSwitchInputMethod.defaultIM": "com.apple.keylayout.US",
  "vim.autoSwitchInputMethod.obtainIMCmd": "/opt/homebrew/bin/im-select",
  "vim.autoSwitchInputMethod.switchIMCmd": "/opt/homebrew/bin/im-select {im}",
  "vim.easymotion": true,
  "vim.incsearch": true,
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  "vim.sneak": true,
  "vim.normalModeKeyBindings": [
    {
      "before": ["<leader>", "gd"],
      "commands": ["goToNextReference"]
    },
    {
      "before": ["<leader>", "gc"],
      "commands": ["editor.action.commentLine"]
    },
    //   "before": ["<tab>"],
    //   "commands": ["workbench.action.nextEditorInGroup"]
    // },
    // {
    //   "before": ["<S-tab>"],
    //   "commands": ["workbench.action.previousEditorInGroup"]
    // },
    {
      "before": ["<C-l>"],
      "commands": ["workbench.action.navigateRight"]
    },
    {
      "before": ["<C-h>"],
      "commands": ["workbench.action.navigateLeft"]
    },
    {
      "before": ["<C-j>"],
      "commands": ["workbench.action.navigateDown"]
    },
    {
      "before": ["<C-k>"],
      "commands": ["workbench.action.navigateUp"]
    },
    {
      "before": ["<leader>", "]"],
      "commands": ["workbench.action.navigateForward"]
    },
    {
      "before": ["<leader>", "["],
      "commands": ["workbench.action.navigateBack"]
    },
    {
      "before": ["<leader>", "backspace"],
      "commands": ["workbench.action.navigateToLastEditLocation"]
    }
  ],
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "k"],
      "after": ["<Esc>"]
    },
    {
      "before": ["<C-j>"],
      "after": ["<Esc>"]
    },
    {
      "before": ["<C-k>"],
      "after": ["<Esc>"]
    }
  ],
  "vim.visualModeKeyBindings": [
    {
      "before": [">"],
      "after": [">", "g", "v"]
    },
    {
      "before": ["<"],
      "after": ["<", "g", "v"]
    },
    {
      "before": ["<leader>", "/"],
      "commands": ["editor.action.commentLine"]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<leader>", "d"],
      "after": ["d", "d"]
    },
    {
      "before": ["<C-/>"],
      "commands": [":nohl"]
    },
    {
      "before": ["<leader>", "e"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    {
      "before": ["<leader>", "f"],
      "commands": ["revealInExplorer"]
    }
  ],
}
