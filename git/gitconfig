[user]
    name = Anton Galitsyn
    email = anton.galitsyn@gmail.com

[color]
    diff = auto
    status = auto
    interactive = auto
    branch = auto

[alias]
    f = fetch --all --prune
    s = switch
    pu = pull
    co = checkout
    st = status
    br = !git --no-pager branch
    ci = commit
    dh = diff HEAD
    dc = diff --cached
    nmerge = merge --no-ff
    unstage = reset HEAD --
    rsh = reset --hard
    clh = clean -fdx
    rollback = reset --soft HEAD~1
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset%n' --abbrev-commit --date=relative --branches
    smb = submodule update --init --recursive
    it = !git init && git commit -m “root” --allow-empty
    please = push --force-with-lease

    # Find branches containing commit
    fb = "!f() { git branch -a --contains $1; }; f"

    # Find tags containing commit
    ft = "!f() { git describe --always --contains $1; }; f"

    # Find commits by source code
    fc = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short -S$1; }; f"

    # Find commits by commit message
    fm = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short --grep=$1; }; f"

    # Remove branches that have already been merged with master
    # a.k.a. ‘delete merged’
    dm = "!git branch --merged | grep -v '\\*' | grep -v 'master' | xargs -n 1 git branch -d; git remote -v update -p"

    # Interactive rebase on latest commit of main branch
    main-branch="!git symbolic-ref refs/remotes/origin/HEAD | cut -d'/' -f4"
    rebase-on-main="!git fetch origin $(git main-branch) && git rebase --interactive origin/$(git main-branch) --autostash"

[log]
    date = local

[core]
    filemode = false
    excludesfile = ~/.gitignore
    autocrlf = input
    pager = "delta" # --plus-style=\"#333B2F\" --minus-style=\"#382F32\"

[push]
    default = simple

[filter "lfs"]
    required = true
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process

[pull]
    rebase = true

[fetch]
    prune = true

[delta]
    features = side-by-side line-numbers decorations
    whitespace-error-style = 22 reverse
    navigate = true
    hyperlinks = true
    hyperlinks-file-link-format = "vscode://file/{path}:{line}"

[delta "light-mode"]
    light = true

[delta "dark-mode"]
    dark = true

[include]
    path = ~/.gitconfig.local
